#include "jsccb.h"
#include <stdio.h>
#include <stdlib.h>

int main(int argc, char* argv[])
{
    {
        JSccb sccb60(0x60);
        if(sccb60.Value(0x0A) == 0x26)
        {
            sccb60.SetValue(0xFF, 0x00);
            sccb60.SetValue(0xF7, 0x40);
        }
    }
    JSccb sccb40(0x40);
    sccb40.SetValue(0xFF, 0x01);
    if(sccb40.Value(0x0A) != 0x26)
    {
        printf("can't connect to 2640\n");
        return -1;
    }

    const unsigned char ov2640_yuv_init[][2]=
    {
        {0xFF,0X00},//设置选择dsp
        {0xFF,0X00},
        {0x2C,0XFF},
        {0x2E,0XDF},
        {0xFF,0X01},
        {0x3C,0X32},
        {0x11,0X00},
        {0x09,0X02},
        {0x03,0XCA},
        {0x04,0X08},
        {0x13,0XE5},
        {0x14,0X48},
        {0x2C,0X0C},
        {0x33,0X78},
        {0x3A,0X33},
        {0x3B,0XFB},
        {0x3E,0X00},
        {0x43,0X11},
        {0x16,0X10},
        {0x39,0X02},
        {0x35,0X88},
        {0x22,0X0A},
        {0x37,0X40},
        {0x23,0X00},
        {0x34,0XA0},
        {0x36,0X1A},
        {0x06,0X02},
        {0x07,0XC0},
        {0x0D,0XB7},
        {0x0E,0X01},
        {0x4C,0X00},
        {0x4A,0X81},
        {0x21,0X99},
        {0x24,0X3A},
        {0x25,0X32},
        {0x26,0X82},
        {0x5C,0X00},
        {0x63,0X00},
        {0x5D,0X55},
        {0x5E,0X7D},
        {0x5F,0X7D},
        {0x60,0X55},
        {0x61,0X70},
        {0x62,0X80},
        {0x7C,0X05},
        {0x20,0X80},
        {0x28,0X30},
        {0x6C,0X00},
        {0x6D,0X80},
        {0x6E,0X00},
        {0x70,0X02},
        {0x71,0X96},
        {0x73,0XE1},
        {0x3D,0X34},
        {0x5A,0X57},
        {0x4F,0XBB},
        {0x50,0X9C},
        {0x0F,0X43},
        {0xFF,0X00},
        {0xE5,0X7F},
        {0xF9,0XC0},
        {0x41,0X24},
        {0xE0,0X14},
        {0x76,0XFF},
        {0x33,0XA0},
        {0x42,0X20},
        {0x43,0X18},
        {0x4C,0X00},
        {0x87,0XD0},
        {0x88,0X3F},
        {0xD7,0X03},
        {0xD9,0X10},
        {0xD3,0X82},
        {0xC8,0X08},
        {0xC9,0X80},
        {0x7C,0X00},
        {0x7D,0X02},
        {0x7C,0X03},
        {0x7D,0X48},
        {0x7D,0X48},
        {0x7C,0X08},
        {0x7D,0X20},
        {0x7D,0X10},
        {0x7D,0X0E},
        {0x90,0X00},
        {0x91,0X0E},
        {0x91,0X1A},
        {0x91,0X31},
        {0x91,0X5A},
        {0x91,0X69},
        {0x91,0X75},
        {0x91,0X7E},
        {0x91,0X88},
        {0x91,0X8F},
        {0x91,0X96},
        {0x91,0XA3},
        {0x91,0XAF},
        {0x91,0XC4},
        {0x91,0XD7},
        {0x91,0XE8},
        {0x91,0X20},
        {0x92,0X00},
        {0x93,0X06},
        {0x93,0XE3},
        {0x93,0X05},
        {0x93,0X05},
        {0x93,0X00},
        {0x93,0X00},
        {0x93,0X00},
        {0x93,0X00},
        {0x93,0X00},
        {0x93,0X00},
        {0x93,0X00},
        {0x93,0X00},
        {0x93,0X00},
        {0x96,0X00},
        {0x97,0X08},
        {0x97,0X19},
        {0x97,0X02},
        {0x97,0X0C},
        {0x97,0X24},
        {0x97,0X30},
        {0x97,0X28},
        {0x97,0X26},
        {0x97,0X02},
        {0x97,0X98},
        {0x97,0X80},
        {0x97,0X00},
        {0x97,0X00},
        {0xC3,0XED},
        {0xA4,0X00},
        {0xA8,0X00},
        {0xBF,0X00},
        {0xBA,0XF0},
        {0xBC,0X64},
        {0xBB,0X02},
        {0xB6,0X3D},
        {0xB8,0X57},
        {0xB7,0X38},
        {0xB9,0X4E},
        {0xB3,0XE8},
        {0xB4,0XE1},
        {0xB5,0X66},
        {0xB0,0X67},
        {0xB1,0X5E},
        {0xB2,0X04},
        {0xC7,0X00},
        {0xC6,0X51},
        {0xC5,0X11},
        {0xC4,0X9C},
        {0xCF,0X02},
        {0xA6,0X00},
        {0xA7,0XE0},
        {0xA7,0X10},
        {0xA7,0X1E},
        {0xA7,0X21},
        {0xA7,0X00},
        {0xA7,0X28},
        {0xA7,0XD0},
        {0xA7,0X10},
        {0xA7,0X16},
        {0xA7,0X21},
        {0xA7,0X00},
        {0xA7,0X28},
        {0xA7,0XD0},
        {0xA7,0X10},
        {0xA7,0X17},
        {0xA7,0X21},
        {0xA7,0X00},
        {0xA7,0X28},
        {0xC0,0X64},//100
        {0xC1,0X4b},//75
        {0x86,0X1D},
        {0x50,0X00},
        {0x51,0XC8},//200
        {0x52,0X96},//150
        {0x53,0X00},
        {0x54,0X00},
        {0x55,0X00},//00
        {0x57,0X00},
        {0x5A,0XC8},//200
        {0x5B,0X96},//150
        {0x5C,0X00},//00
        {0xC3,0XEF},
        {0x7F,0X00},
        {0xDA,0X00},
        {0xE5,0X1F},
        {0xE1,0X67},
        {0xE0,0X00},
        {0xDD,0XFF},
        {0x05,0X00},
        {0xFF,0X01},
        {0xFF,0X01},
        {0x12,0X40}, //SVGA 800*600
        {0x17,0X11},
        {0x18,0X43},
        {0x19,0X00},
        {0x1A,0X97},
        {0x32,0X09},
        {0x4F,0XBB},
        {0x50,0X9C},
        {0x5A,0X57},
        {0x6D,0X80},
        {0x39,0X02},
        {0x35,0X88},
        {0x22,0X0A},
        {0x37,0X40},
        {0x23,0X00},
        {0x34,0XA0},
        {0x36,0X1A},
        {0x06,0X02},
        {0x07,0XC0},
        {0x0D,0XB7},
        {0x0E,0X01},
        {0x4C,0X00},
        {0xFF,0X00},
        {0xE0,0X04},
        {0xC0,0X64},//100
        {0xC1,0X4b},//50
        {0x86,0X1D},
        {0x50,0X00},
        {0x51,0XC8},//200
        {0x52,0X96},//150
        {0x53,0X00},
        {0x54,0X00},
        {0x55,0X00},//00
        {0x57,0X00},
        {0x5A,0XC8},//200
        {0x5B,0X96},//150
        {0x5C,0X00},//00
        {0xE0,0X00},
        {0xFF,0X01},
        {0x11,0X01},
        {0x3D,0X34},
        {0x50,0X80},
        {0xFF,0X00},
        {0xD3,0X82},
        {0xFF,0X01}
    };
    for(int i = 0; i< (sizeof(ov2640_yuv_init)/sizeof(*ov2640_yuv_init)); i++)
    {
        sccb40.SetValue(ov2640_yuv_init[i][0], ov2640_yuv_init[i][1]);
    }

    return 0;
}

//zhihu
//u8 Driver[][2] = //OV9710InitTable_1280_720[][2]

//{

//0x01,// [7:0]:driver type,0x01:sensor whith ISP; 0x02:ISP; 0x03:sensor whithout isp;

//0x01,0x6e,0x36,0x00,// [7:0]:XCLK

//0x00,0x01,0x86,0xA0,// [7:0]:BAUDRATE(BE)

//0x00,// [7:0]:chip_ID_addr>>8,when AddrByteNum == 2; 0 when AddrByteNum == 1

//0x0a,// [7:0]:chip_ID_addr

//0x00,//

//0x26,// [7:0]:chip_ID

//0x00,// [7:0]:resverd

//0x00,// [7:0]:resverd

//0x00,// [7:0]:resverd

//0x00,//

//0x02,0x80,//image_width20171211

//0x01,0xE0,//image_height

////0x05,0x00,//image_width

////0x02,0xD0,//image_hight

//0x61,// [7:0]:read ID

//0x60,// [7:0]:write ID

//0x01,// [7:0]:AddrByteNum ;

//0x01,// [7:0]:DataByteNum

//0x02,// [2:0]:ldo_config_para

//0x01,// [7:0]:ID nums



///////////////////@@ 640X480

//0xff, 0x01,

//0x12, 0x80, //com7 2017 0x80,

//// {SENSOR_WRITE_DELAY, 0x0a},//delay 10ms

//// 0x0a,0x26, //delay 10ms

//// 0x0a,0x26,

//// 0x0a,0x26,

//// 0x0a,0x26,

//// 0x0a,0x26,

//// 0x0a,0x26,

//// 0x0a,0x26,

//// 0x0a,0x26,

//// 0x0a,0x26,

//// 0x0a,0x26,

////

//0xff, 0x00,

//0xc2,0x4c, //2017 add

//0x2c, 0xff, //rsvd

//0x2e, 0xdf, //rsvd

//0xff, 0x01,

//0x3c, 0x32, //rsvd

////

//0x11, 0x00, //2017 //pdf:0x01

//0x09, 0x02, //2x capability

//0x04, 0x28, //0x28

//0x13, 0xe5, //com8

//0x14, 0x48, //com9 2017

//0x2c, 0x0c, //rsvd

//0x33, 0x78, //rsvd

//0x3a, 0x33, //rsvd

//0x3b, 0xfB, //rsvd

////

//0x3e, 0x00, //rsvd

//0x43, 0x11, //rsvd

//0x16, 0x10, //rsvd

////

//0x39, 0x92,

////

//0x35, 0xda,

//0x22, 0x1a,

//0x37, 0xc3,

//0x23, 0x00,

//0x34, 0xc0,

//0x36, 0x1a,

//0x06, 0x88,

//0x07, 0xc0,

//0x0d, 0x87,

//0x0e, 0x41,

//0x4c, 0x00,

//0x48, 0x00,

//0x5b, 0x00,

//0x42, 0x03,

////

//0x4a, 0x81,

//0x21, 0x99,

////

//0x24, 0x40,

//0x25, 0x38, //AEB

//0x26, 0x82, //2017 VV

//0x5c, 0x00, //rsvd

//0x63, 0x00, //rsvd

//0x61, 0x70, //HISTO_L

//0x62, 0x80, //HISTO_H

//0x7c, 0x05,

////

//0x20, 0x80, //rsvd

//0x28, 0x30, //rsvd

//0x6c, 0x00, //rsvd

//0x6d, 0x80, //rsvd

//0x6e, 0x00, //rsvd

//0x70, 0x02, //rsvd

//0x71, 0x94, //rsvd

//0x73, 0xc1, //rsvd

////

//0x12, 0x40,

//0x17, 0x11, //hrefst

//0x18, 0x43, //hrefend

//0x19, 0x00, //vstrt

//0x1a, 0x97,//0x4b, //vend 2017 int0x4b

//0x32, 0x09, //reg32

//0x37, 0xc0, //rsvd

//0x4f, 0x60,//banding 50

//0x50, 0xa8, //BD60

//0x6d, 0x00, //rsvd

//0x3d, 0x38, //rsvd

////

//0x46,0x00,//2017 int 0x3f,

//0x4f,0x60,

//0x0c,0x3c,//2017 int 0x3c

////

//0xff,0x00,

//0xe5,0x7f,

//0xf9,0xc0,

//0x41, 0x24, //rsvd

//0xe0, 0x14,

//0x76, 0xff, //rsvd

//0x33, 0xa0, //rsvd

//0x42, 0x20, //rsvd

//0x43, 0x18, //rsvd

//0x4c, 0x00, //rsvd

//0x87, 0xd5, //CTRL3 2017 0xd0

//0x88, 0x3f, //rsvd

//0xd7, 0x03, //rsvd

//0xd9, 0x10, //rsvd

//0xd3, 0x82, //R_DVP_SP

////

//0xc8, 0x08, //rsvd

//0xc9, 0x80, //rsvd

////

//0x7c, 0x00, //BPADDR[3.0]

//0x7d, 0x00, //BPDATA[7.0]

//0x7c, 0x03, //BPADDR[3.0]

//0x7d, 0x48,

//0x7d, 0x48,

//0x7c, 0x08,

//0x7d, 0x20,

//0x7d, 0x10,

//0x7d, 0x0e,

////

//0x90, 0x00,

//0x91, 0x0e,

//0x91, 0x1a,

//0x91, 0x31,

//0x91, 0x5a,

//0x91, 0x69,

//0x91, 0x75,

//0x91, 0x7e,

//0x91, 0x88,

//0x91, 0x8f,

//0x91, 0x96,

//0x91, 0xa3,

//0x91, 0xaf,

//0x91, 0xc4,

//0x91, 0xd7,

//0x91, 0xe8,

//0x91, 0x20,

////

//0x92, 0x00,

//0x93, 0x06,

//0x93, 0xe3,

//0x93, 0x05,

//0x93, 0x05,

//0x93, 0x00,

//0x93, 0x04,

//0x93, 0x00,

//0x93, 0x00,

//0x93, 0x00,

//0x93, 0x00,

//0x93, 0x00,

//0x93, 0x00,

//0x93, 0x00,

////

//0x96, 0x00,

//0x97, 0x08,

//0x97, 0x19,

//0x97, 0x02,

//0x97, 0x0c,

//0x97, 0x24,

//0x97, 0x30,

//0x97, 0x28,

//0x97, 0x26,

//0x97, 0x02,

//0x97, 0x98,

//0x97, 0x80,

//0x97, 0x00,

//0x97, 0x00,

////

//0xc3,0xed,

//0xa4,0x00,

//0xa8,0x00,

//0xc5,0x11,

//0xc6,0x51,

//0xbf,0x80,

//0xc7,0x10,

//0xb6, 0x66,

//0xb8, 0xa5,

//0xb7, 0x64,

//0xb9, 0x7c,

//0xb3, 0xaf,

//0xb4, 0x97,

//0xb5, 0xff,

//0xb0, 0xc5,

//0xb1, 0x94,

//0xb2, 0x0f,

//0xc4, 0x5c,

////

//0xc0,0x64,

//0xc1,0x4b,

//0x8c,0x00,

//0x86,0x3d,

//0x50,0x00,

//0x51,0xc8,//0xa0, 2017

//0x52,0x96,//0x78, 2017

//0x53,0x00, //0x00 offsetx[7.0]

//0x54,0x00, //0x00offsetY[7.0]

//0x55,0x00,

//0x5a,0xa0,//0xc8,//

//0x5b,0x78,//0x96,

//0x5c,0x00,

//0xd3,0x82,

////

//0xc3,0xed,

//0x7f,0x00,

////

//0xda,0x00,

////

//0xe5,0x1f,

//0xe1,0x67,

//0xe0,0x00,

//0xdd,0x7f,

//0x05,0x00,

////Auto band filter

////0xff,0x01,

////0x13,0xe5,

////0x0c,0x3a,

////0x4f,0x60,

////0x50,0x50,

////0x5a,0x67,

//////svga 800*600

////0xff,0x01,

////0x12,0x40,

////0x17,0x11,

////0x18,0x43,

////0x32,0x09,

////0x19,0x00,

////0x1A,0x4b,

////0x03,0x4f,

////0x0f,0x4b,

////0x13,0xe5,

////0x2d,0x00,

////0x2e,0x00,

////0x11,0x00,

////0x4f,0xc9,

////0x50,0xa8,

////0x5a,0x33,

////0x6d,0x00,

////0x3d,0x38,

////0x39, 0x9,

////0x35,0xda,

////0x22,0x19,

////0x37,0xc3,

////0x23,0x00,

////0x34,0xc0,

////0x36,0x1a,

////0x06,0x88,

////0x07,0xc0,

////0x0d,0x8f,

////0x0e,0x41,

////0x4c,0x00,

////0xff,0x00,

////0x87,0xd5,

////0xe0,0x04,

////0xc0,0x64,

////0xc1,0x4b,

////0x8c,0x00,

////0x86,0x3D,

////0xff,0x00,

////0x7c,0x00,

////0x7c,0x03,

////0x7d,0x40,

////0x7d,0x40,

////0xc9,0x40,

////0x50,0x00,

////0x51,0xC8,

////0x52,0x96,

////0x53,0x00,

////0x54,0x00,

////0x55,0x00,

////0x5a,0xC8,

////0x5b,0x96,

////0x5c,0x00,

////0xd3,0x82,

////0xdd,0xff,

////0xe0,0x00,

//};
